// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  password      String    @default("ioadaildmklndaklmdklwjo3i4u89u9woedjml;kdnm")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  transactions    Transaction[]
  sharedWallets   Wallet[]  @relation("SharedWallets")
  ownedWallets    Wallet[]  @relation("OwnedWallets")
  profile         Profile?
  @@map(name: "users")
}

model Profile{
  id              Int         @id @default(autoincrement())
  user            User        @relation(fields:[userId], references: [id])
  userId          String         @unique
}

model Wallet{
  id              Int         @id @default(autoincrement())
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  owners          User[]      @relation("OwnedWallets")
  shared          User[]      @relation("SharedWallets")
  transactions    Transaction[]
}

model Transaction{
  id              Int         @id @default(autoincrement())
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  wallet          Wallet      @relation(fields:[walletId], references:[id])
  walletId        Int
  subId           Int
  date            DateTime    @default(now())
  category        Category    @relation(fields:[categoryId], references:[id])
  categoryId      Int
  author          User        @relation(fields:[authorId], references:[id])
  authorId        String
  description     String   
  amount          Int
  type            String
  projectId         Int?
  project         Project?    @relation(fields:[projectId], references:[id])
}

model Project{
  id        Int @id @default(autoincrement())
  maxBudget Int
  walletId  Int
  subId     Int
  transactions Transaction[]
}

model Category{
  id              Int         @id @default(autoincrement())
  name            String      @unique
  transactions    Transaction[]
}